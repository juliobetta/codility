require 'rspec'

########################################################################################################################
# IMPLEMENTATION #######################################################################################################
########################################################################################################################

module MissingInteger
  def self.solution(a)
    ((1..(a.length+1)).to_a - a).min
  end
end


########################################################################################################################
# TESTS ################################################################################################################
########################################################################################################################

RSpec.describe MissingInteger do
  it 'returns missing integer' do
    expect(MissingInteger.solution([1,3,6,4,1,2])).to eq 5
    expect(MissingInteger.solution([5])).to eq 1
    expect(MissingInteger.solution([1,4,7,9,1,3,5])).to eq 2
  end
end



### Codility Result Link
# https://codility.com/demo/results/demo548N9Z-GQA
